services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-odoo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-${COMPOSE_PROJECT_NAME}_db}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 30
    volumes:
      - pg_${COMPOSE_PROJECT_NAME}_data:/var/lib/postgresql/data
    networks:
      - default

  odoo:
    image: odoo:18.0
    container_name: "odoo_${COMPOSE_PROJECT_NAME}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: ${POSTGRES_USER:-odoo}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-password}
      DESIRED_DB: ${POSTGRES_DB:-${COMPOSE_PROJECT_NAME}_db}
    # Host-Port wird in Jenkins/Script eindeutig berechnet (z. B. 8069 + BUILD_NUMBER)
    ports:
      - "${ODOO_PORT:-8069}:8069"
    # Traefik-Labels optional: Traefik selbst bleibt au√üerhalb des Repos (externes Netz!)
    labels:
      - "traefik.enable=${TRAEFIK_ENABLE:-false}"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${VIRTUAL_HOST:-localhost}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=${TRAEFIK_ENTRYPOINTS:-websecure}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=${ACME_RESOLVER:-le}"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8069"
    healthcheck:
      test: ["CMD-SHELL", "bash -lc 'exec 3<>/dev/tcp/127.0.0.1/8069'"]
      interval: 5s
      timeout: 2s
      retries: 40
    volumes:
      - odoo_${COMPOSE_PROJECT_NAME}_data:/var/lib/odoo
      # Falls du ein Initscript nutzt:
      # - ./scripts/odoo-init.sh:/usr/local/bin/odoo-init.sh:ro
      # command: ["/usr/local/bin/odoo-init.sh"]
    networks:
      - default
      - proxy

volumes:
  odoo_${COMPOSE_PROJECT_NAME}_data: {}
  pg_${COMPOSE_PROJECT_NAME}_data: {}

networks:
  default:
    driver: bridge
  proxy:
    external: true
