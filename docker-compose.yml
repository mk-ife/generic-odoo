services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-odoo}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-${COMPOSE_PROJECT_NAME}_db}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-odoo} -d ${POSTGRES_DB:-${COMPOSE_PROJECT_NAME}_db} -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 60
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks: [default]

  odoo:
    image: odoo:18.0
    restart: unless-stopped
    init: true
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: "5432"
      DB_USER: ${POSTGRES_USER:-odoo}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-password}
      DESIRED_DB: ${POSTGRES_DB:-${COMPOSE_PROJECT_NAME}_db}
    # Startet unser Skript aus dem gemounteten Verzeichnis
    command: ["/bin/bash","-lc","/opt/odoo-init/entry.sh"]
    healthcheck:
      test: ["CMD-SHELL", "bash -lc 'exec 3<>/dev/tcp/127.0.0.1/8069'"]
      interval: 10s
      timeout: 3s
      retries: 30
      start_period: 240s
    volumes:
      - odoo_data:/var/lib/odoo
      - ./addons:/mnt/extra-addons:ro
      # Mount GANZES Verzeichnis -> keine Dateikonflikte mehr
      - ./scripts/odoo-init:/opt/odoo-init:ro
    labels:
      - "traefik.enable=${TRAEFIK_ENABLE:-false}"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${VIRTUAL_HOST:-}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8069"
    networks: [default, proxy]

volumes:
  odoo_data:
    name: "odoo_${COMPOSE_PROJECT_NAME}_data"
  pg_data:
    name: "pg_${COMPOSE_PROJECT_NAME}_data"

networks:
  default:
    name: "${COMPOSE_PROJECT_NAME}_default"
  proxy:
    external: true
    name: proxy
